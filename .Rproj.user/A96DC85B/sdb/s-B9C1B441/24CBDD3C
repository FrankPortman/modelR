{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(plumber)\n\nshinyServer(function(input, output) {\n\n  output$distPlot <- renderPlot({\n\n    # generate bins based on input$bins from ui.R\n    x    <- faithful[, 2]\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n\n    # draw the histogram with the specified number of bins\n    hist(x, breaks = bins, col = 'darkgray', border = 'white')\n\n  })\n  \n  system(\"Rscript deploy.R &\")\n  \n  fileReaderData <- reactiveFileReader(500,\n                                       'logs/previous_inputs.log', readLines)\n  \n  output$fileReaderText <- renderText({\n    # Read the text, and make it a consistent number of lines so\n    # that the output box doesn't grow in height.\n    text <- fileReaderData()\n    length(text) <- 14\n    text[is.na(text)] <- \"\"\n    paste(text, collapse = '\\n')\n  })\n\n})\n",
    "created" : 1468098564051.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1433187063",
    "id" : "24CBDD3C",
    "lastKnownWriteTime" : 1468100070,
    "last_content_update" : 1468100070076,
    "path" : "~/packages/modelR/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}